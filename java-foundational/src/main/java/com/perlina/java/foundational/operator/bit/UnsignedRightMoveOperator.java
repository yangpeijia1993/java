package com.perlina.java.foundational.operator.bit;

/**
 * 无符号右移
 *
 * @author: Perlina
 * @version:2021/8/219:34 PM
 */
public class UnsignedRightMoveOperator {
    public static void main(String[] args) {
        //二进制补码向右移动，无论符号是0还是1，左边都补0，
        // 负数在进行无符号右移后会变成一个正数

        //正整数无符号右移
        System.out.println(188>>>2);

        /**
         * 计算过程：
         * 188：  0000 0000 0000 0000 0000 0000 1011 1100
         * >>>2: 000000 0000 0000 0000 0000 0000 1011 11 00
         * 47
         */
        //负整数无符号右移
        System.out.println(-188>>>2);
        /**
         * 计算过程：
         * -188： 1000 0000 0000 0000 0000 0000 1011 1100
         * 反：   1111 1111 1111 1111 1111 1111 0100 0011
         * 补码： 1111 1111 1111 1111 1111 1111 0100 0100
         * >>>2: 00 1111 1111 1111 1111 1111 1111 0100 01 00
         * >>>2: 0011 1111 1111 1111 1111 1111 1101 0001  00
         * 原：  0011 1111 1111 1111 1111 1111 1101 0001
         * 1073741777
         */
    }
}

package com.perlina.java.foundational.operator.bit;

/**
 * 位运算左移
 *
 * @author: Perlina
 * @version:2021/8/219:09 PM
 */
public class SignedLeftMoveOperator {
    /**
     * 二进制补码向左移动，左边符号为丢弃，右边补0
     有符号左移(<<)运算规律：左移N位就是乘以2的N次方
     */
    public static void main(String[] args) {
        //正整数左移
        System.out.println(10<<2);
        /**
         * 计算过程
         * 10：  0000 0000 0000 0000 0000 0000 0000 1010
         * <<2: 00 00 0000 0000 0000 0000 0000 0000 1010 00
         * 40
         * = 10*2^2=10*4=40
         */


        //负整数左移
        System.out.println(-10<<2);
        /**
         * 计算过程
         * -10：  1000 0000 0000 0000 0000 0000 0000 1010
         * 反码：  1111 1111 1111 1111 1111 1111 1111 0101
         * 补码：  1111 1111 1111 1111 1111 1111 1111 0110
         * 补码左移两位
         *      11 11 1111 1111 1111 1111 1111 1111 011000
         * 转反码： 11 1111 1111 1111 1111 1111 1111 010111
         * 源码：   1000 0000 0000 0000 0000 0000 0010 1000
         * -40
         * -10*2^2=-40
         */
    }

}

package com.perlina.java.foundational.operator.bit;

/**
 * 有符号右移
 *
 * @author: Perlina
 * @version:2021/8/219:20 PM
 */
public class SignedRightMoveOperator {
    /**
     * 二进制补码向右移动，左边使用符号为补齐，符号为是1就补1，符号位是0就补0
     有符号右移(>>)运算规律：右移N位就是除以2的N次方
     */
    public static void main(String[] args) {
        //正整数右移
        System.out.println(32>>2);
        /**
         * 计算过程：
         * 32 ：0000 0000 0000 0000 0000 0000 0010 0000
         * 右移两位：
         *      00 0000 0000 0000 0000 0000 0000 0010 00
         *   8
         * 32 /（2^2) = 32/4=8
         */

        //负整数右移
        System.out.println(-32>>2);
        /**
         * 计算过程：
         * -32 ：1000 0000 0000 0000 0000 0000 0010 0000
         * 反码： 1111 1111 1111 1111 1111 1111 1101 1111
         * 补码： 1111 1111 1111 1111 1111 1111 1110 0000
         * 右移2位
         *       11 1111 1111 1111 1111 1111 1111 1110 00 00
         * 反码： 11 1111 1111 1111 1111 1111 1111 1101 11
         * 源码： 10 0000 0000 0000 0000 0000 0000 0010 00
         * -8
         * -32/（2^2）=-8
         */
    }
}
